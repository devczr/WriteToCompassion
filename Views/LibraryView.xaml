<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:mct="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
             xmlns:mg="clr-namespace:MauiGestures;assembly=MauiGestures"
             xmlns:models="clr-namespace:WriteToCompassion.Models"
             xmlns:viewmodels="clr-namespace:WriteToCompassion.ViewModels"
             x:Class="WriteToCompassion.Views.LibraryView">
    <Shell.BackButtonBehavior>
        <BackButtonBehavior IsEnabled="False"
                            IsVisible="False" />
    </Shell.BackButtonBehavior>

    <Shell.TitleView>
        <Grid
            Margin="0,0,0,0"
           RowDefinitions="*"
            ColumnDefinitions="*">
            <Grid
                Grid.Row="0"
                HeightRequest="50"
                ColumnDefinitions="5*,*"
                IsVisible="{Binding IsNotMultiSelect}">
                <Label 
                Style="{StaticResource TitleViewLabel}"
                Text="Thought Library" 
                Grid.Column="0"
                VerticalOptions="Center"/>
                <ImageButton
                    Grid.Column="1"
                    Source="searchicon.png"
                    HorizontalOptions="Center"
                    VerticalOptions="Center"
                    WidthRequest="51"
                    HeightRequest="51"
                    Style="{StaticResource CustomTopTabBar}">
                    <ImageButton.Behaviors>
                        <mct:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource light_primary}, Dark={StaticResource dark_primary}}"/>
                    </ImageButton.Behaviors>
                </ImageButton>
            </Grid>
            <!--Multi Select Top Bar-->
            <Border
                Grid.Row="0"
                BackgroundColor="{AppThemeBinding Light={StaticResource light_secondaryContainer}, Dark= {StaticResource dark_secondaryContainer}}"
                IsVisible="{Binding IsMultiSelect}"
                StrokeShape="RoundRectangle 10"
                Margin="0,0,17.5,0">
                <Grid
                    x:DataType="viewmodels:LibraryViewModel"
                    HeightRequest="50"
                    ColumnDefinitions="*,*,*,*">
                    <Button
                        Grid.Column="0"
                        Text="X"
                        TextColor="{AppThemeBinding Light={StaticResource light_onPrimaryContainer}, Dark={StaticResource dark_onPrimaryContainer}}"
                        FontSize="Large"
                        VerticalOptions="Center"
                        HorizontalOptions="Start"
                        BackgroundColor="Transparent"
                        Command="{Binding CancelMultiSelectCommand}"/>
                    <Label
                        Grid.Column="1"
                        Text="{Binding CountSelected}"
                        TextColor="{AppThemeBinding Light={StaticResource light_onPrimaryContainer}, Dark={StaticResource dark_onPrimaryContainer}}"
                        FontAttributes="Bold"
                        FontSize="Large"/>
                    <ImageButton
                        Grid.Column="3"
                        Source="trashicon.png"
                        HorizontalOptions="Center"
                        VerticalOptions="Center"
                        WidthRequest="51"
                        HeightRequest="51"
                        Clicked="ImageButton_Clicked"
                        Style="{StaticResource CustomTopTabBar}">
                        <ImageButton.Behaviors>
                            <mct:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource light_primary}, Dark={StaticResource dark_primary}}"/>
                        </ImageButton.Behaviors>
                    </ImageButton>
                </Grid>
            </Border>

        </Grid>
    </Shell.TitleView>
    <!--
    <ContentPage.Behaviors>
        <mct:EventToCommandBehavior EventName="NavigatedTo" Command="{Binding RefreshTrueCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}"/>
    </ContentPage.Behaviors>
    -->
    <Grid
       RowDefinitions="*,40">
        <Grid>
            <RefreshView
                IsEnabled="{Binding CanRefresh, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}"
                Command="{Binding RefreshThoughtsCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}"
                IsRefreshing="{Binding IsRefreshing, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}">
                <CollectionView
            Margin="8"
            x:Name="ThoughtsCV"
            SelectionMode="{Binding SelectionMode}"
            SelectedItems="{Binding SelectedThoughts}"
            ItemsSource="{Binding AllThoughts}">
                    <CollectionView.ItemsLayout>
                        <GridItemsLayout
                Orientation="Vertical"
                Span="2"
                HorizontalItemSpacing="8"
                VerticalItemSpacing="8"/>
                    </CollectionView.ItemsLayout>
                    <CollectionView.ItemTemplate>
                        <DataTemplate>
                            <Border
                    HeightRequest="120"
                    Padding="0">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter
                                        Property="Padding"
                                        Value="0"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <VisualState.Setters>
                                                <Setter
                                                    Property="Padding"
                                                    Value="8"/>
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid
                            mg:Gesture.CommandParameter="{Binding .}"
                            mg:Gesture.SwipeBottomCommand="{Binding RefreshThoughtsCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}"
                            mg:Gesture.TapCommand="{Binding TappedCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}"
                            mg:Gesture.LongPressCommand="{Binding LongPressCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}">

                                    <BoxView
                                Color="{StaticResource light_primaryContainer}"/>
                                    <Label
                                Text="{Binding Content}"
                                FontSize="Large"
                                TextColor="{StaticResource light_onPrimaryContainer}"/>

                                </Grid>

                            </Border>
                        </DataTemplate>
                    </CollectionView.ItemTemplate>
                </CollectionView>
            </RefreshView>
        </Grid>
        <Grid
            Grid.Row="1"
            ColumnDefinitions="*,*,*"
            Padding="0"
            VerticalOptions="Center">

            <ImageButton
                Grid.Column="0"
                Source="writeicon.png"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                WidthRequest="52"
                HeightRequest="52"
                Style="{StaticResource CustomTabBar}"
                Command="{Binding GoToNewThoughtEditorCommand, Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}">
                <ImageButton.Behaviors>
                    <mct:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource light_onSurfaceVariant}, Dark={StaticResource dark_onSurfaceVariant}}"/>
                </ImageButton.Behaviors>
            </ImageButton>

            <ImageButton
                Grid.Column="1"
                Source="thoughticon.png"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                WidthRequest="56"
                HeightRequest="51"
                Style="{StaticResource CustomTabBar}"
                Command="{Binding GoToHomeCommand,Source={RelativeSource AncestorType={x:Type viewmodels:LibraryViewModel}}}">
                <ImageButton.Behaviors>
                    <mct:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource light_onSurfaceVariant}, Dark={StaticResource dark_onSurfaceVariant}}"/>
                </ImageButton.Behaviors>
            </ImageButton>

            <ImageButton
                Grid.Column="2"
                Source="scrollicon.png"
                HorizontalOptions="Center"
                VerticalOptions="Center"
                WidthRequest="54"
                HeightRequest="50"
                Style="{StaticResource CustomTabBar}">
                <ImageButton.Behaviors>
                    <mct:IconTintColorBehavior TintColor="{AppThemeBinding Light={StaticResource light_primary}, Dark={StaticResource dark_primary}}"/>
                </ImageButton.Behaviors>
            </ImageButton>
        </Grid>
    </Grid>
</ContentPage>